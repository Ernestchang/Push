<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.ernest.push">
    <!--极光推送的权限-->
    <permission
        android:name="${applicationId}.permission.JPUSH_MESSAGE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.JPUSH_MESSAGE" />

    <!--小米推送的权限-->
    <permission
        android:name="${applicationId}.permission.MIPUSH_RECEIVE"
        android:protectionLevel="signature" />
    <uses-permission android:name="${applicationId}.permission.MIPUSH_RECEIVE" />

    <!--权限-->
    <uses-permission android:name="android.permission.RECEIVE_USER_PRESENT" />
    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="android.permission.MOUNT_UNMOUNT_FILESYSTEMS" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.WRITE_SETTINGS" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />

    <!-- Optional. Required for location feature -->
    <uses-permission android:name="android.permission.SYSTEM_ALERT_WINDOW" /> <!-- 用于开启 debug 版本的应用在6.0 系统上 层叠窗口权限 -->
    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
    <uses-permission android:name="android.permission.CHANGE_WIFI_STATE" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
    <uses-permission android:name="android.permission.ACCESS_LOCATION_EXTRA_COMMANDS" />
    <uses-permission android:name="android.permission.CHANGE_NETWORK_STATE" />
    <uses-permission android:name="android.permission.GET_TASKS" />

    <!--如果是安卓8.0，应用编译配置的targetSdkVersion>=26，请务必添加以下权限 -->
    <uses-permission android:name="android.permission.REQUEST_INSTALL_PACKAGES" />

    <application
        android:allowBackup="true"
        android:label="@string/app_name"
        android:supportsRtl="true">


        <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <!--小米推送 start-->

        <!--<service-->
            <!--android:name="com.xiaomi.push.service.XMPushService"-->
            <!--android:enabled="true"-->
            <!--android:process=":pushservice" />-->

        <!--<service-->
            <!--android:name="com.xiaomi.push.service.XMJobService"-->
            <!--android:enabled="true"-->
            <!--android:exported="false"-->
            <!--android:permission="android.permission.BIND_JOB_SERVICE"-->
            <!--android:process=":pushservice" />-->
        <!--<service-->
            <!--android:name="com.xiaomi.mipush.sdk.PushMessageHandler"-->
            <!--android:enabled="true"-->
            <!--android:exported="true" />-->
        <!--<service-->
            <!--android:name="com.xiaomi.mipush.sdk.MessageHandleService"-->
            <!--android:enabled="true" />-->

        <!--&lt;!&ndash;注：此service必须在2.2.5版本以后（包括2.2.5版本）加入&ndash;&gt;-->
        <!--<receiver-->
            <!--android:name="com.xiaomi.push.service.receivers.NetworkStatusReceiver"-->
            <!--android:exported="true">-->
            <!--<intent-filter>-->
                <!--<action android:name="android.net.conn.CONNECTIVITY_CHANGE" />-->
                <!--<category android:name="android.intent.category.DEFAULT" />-->
            <!--</intent-filter>-->
        <!--</receiver>-->

        <!--<receiver-->
            <!--android:name="com.xiaomi.push.service.receivers.PingReceiver"-->
            <!--android:exported="false"-->
            <!--android:process=":pushservice">-->
            <!--<intent-filter>-->
                <!--<action android:name="com.xiaomi.push.PING_TIMER" />-->
            <!--</intent-filter>-->
        <!--</receiver>-->

        <!--<receiver-->
            <!--android:name=".target.xiaomi.XiaomiBroadcastReceiver"-->
            <!--android:exported="true">-->
            <!--<intent-filter>-->
                <!--<action android:name="com.xiaomi.mipush.RECEIVE_MESSAGE" />-->
            <!--</intent-filter>-->
            <!--<intent-filter>-->
                <!--<action android:name="com.xiaomi.mipush.MESSAGE_ARRIVED" />-->
            <!--</intent-filter>-->
            <!--<intent-filter>-->
                <!--<action android:name="com.xiaomi.mipush.ERROR" />-->
            <!--</intent-filter>-->
        <!--</receiver>-->

        <!--<meta-data-->
            <!--android:name="XMPUSH_APPKEY"-->
            <!--android:value="${xiaomiPushAppkey}" />-->

        <!--<meta-data-->
            <!--android:name="XMPUSH_APPID"-->
            <!--android:value="${xiaomiPushAppId}" />-->
        <!--小米推送 end-->

        <!--华为推送 start-->

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 com.bearever.pushdemo 要替换上您应用的包名
            Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied-->
        <provider
            android:name="com.huawei.hms.update.provider.UpdateProvider"
            android:authorities="${applicationId}.hms.update.provider"
            android:exported="false"
            android:grantUriPermissions="true" />

        <!-- 接入HMSSDK 需要注册的provider，authorities 一定不能与其他应用一样，所以这边 com.bearever.pushdemo 要替换上您应用的包名
            Access HMSSDK need to register provider,authorities must not be the same as other applications, so this side ${package_name} to replace the package name you applied-->
        <provider
            android:name="com.huawei.updatesdk.fileprovider.UpdateSdkFileProvider"
            android:authorities="${applicationId}.updateSdk.fileProvider"
            android:exported="false"
            android:grantUriPermissions="true"></provider>

        <!-- 应用下载服务 -->
        <service
            android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false" />

        <!-- 使用 HMSAgent 代码接入HMSSDK 需要注册的activity | Use hmsagent code to access HMSSDK activity that requires registration-->
        <activity
            android:name="com.huawei.android.hms.agent.common.HMSAgentActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>


        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.hms.activity.BridgeActivity"
            android:configChanges="orientation|locale|screenSize|layoutDirection|fontScale"
            android:excludeFromRecents="true"
            android:exported="false"
            android:hardwareAccelerated="true"
            android:theme="@android:style/Theme.Translucent">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.service.otaupdate.AppUpdateActivity"
            android:configChanges="orientation|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent.NoTitleBar" />
        </activity>

        <!-- 接入HMSSDK 需要注册的activity | Access HMSSDK activity to be registered-->
        <activity
            android:name="com.huawei.updatesdk.support.pm.PackageInstallerActivity"
            android:configChanges="orientation|keyboardHidden|screenSize"
            android:exported="false"
            android:theme="@style/upsdkDlDialog">
            <meta-data
                android:name="hwc-theme"
                android:value="androidhwext:style/Theme.Emui.Translucent" />
        </activity>

        <!-- 接入HMSSDK PUSH模块需要注册，第三方相关 :接收Push消息（注册、Push消息、Push连接状态）广播，
                此receiver类需要开发者自己创建并继承com.huawei.hms.support.api.push.PushReceiver类，
                参考示例代码中的类：com.huawei.hmsagent.HuaweiPushRevicer
            Access to the HMSSDK push module requires registration:
	            Receive push message (registration, push message, push connection state) broadcast.
	            This receiver class requires the developer to create and inherit the com.huawei.hms.support.api.push.PushReceiver class.
	            Reference to class in sample code: Com.huawei.hmsagent.HuaweiPushRevicer-->
        <receiver android:name=".target.huawei.HuaweiPushBroadcastReceiver">
            <intent-filter>
                <!-- 必须,用于接收token | Must， for receiving token -->
                <action android:name="com.huawei.android.push.intent.REGISTRATION" />
                <!-- 必须，用于接收消息 | Must， used to receive messages-->
                <action android:name="com.huawei.android.push.intent.RECEIVE" />
                <!-- 可选，用于点击通知栏或通知栏上的按钮后触发onEvent回调 | Optional, click the button on the notification bar or the notification bar to trigger the onevent callback -->
                <action android:name="com.huawei.android.push.intent.CLICK" />
                <!-- 可选，查看push通道是否连接，不查看则不需要 | Optional, query whether the push channel is connected or not -->
                <action android:name="com.huawei.intent.action.PUSH_STATE" />
            </intent-filter>
        </receiver>

        <!-- 接入HMSSDK PUSH模块需要注册 :接收通道发来的通知栏消息 | The access HMSSDK push module needs to be registered: the notification bar message sent from the receiving channel -->
        <receiver android:name="com.huawei.hms.support.api.push.PushEventReceiver">
            <intent-filter>
                <action android:name="com.huawei.intent.action.PUSH" />
            </intent-filter>
        </receiver>

        <!-- 接入HMSSDK 需要注册的应用下载服务 | Access HMSSDK need to register app download service-->
        <service
            android:name="com.huawei.updatesdk.service.deamon.download.DownloadService"
            android:exported="false" />

        <meta-data
            android:name="com.huawei.hms.client.appid"
            android:value="appid=${huaweiPushAppId}"></meta-data>

        <!--华为推送 end-->
    </application>


</manifest>
